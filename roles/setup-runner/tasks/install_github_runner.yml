# Implement your install deployment tasks here
# -------------------------------------------------

# FIXME: investigate why the github runner does not work without the following directories ...

- name: create directories
  delegate_to: "{{ instance_public_ip }}"
  become: true
  ansible.builtin.file:
    path: "{{ work_dir }}/{{ item }}"
    state: directory
    owner: "{{ instance_default_user }}"
    group: "{{ instance_default_user }}"
    mode: "0755"
  with_items:
    - "{{ github_runner_dir }}"
    - "{{ workspace_dir }}/github/home" # used by the github runner, to create containers ...
    - "{{ workspace_dir }}/github/workspace"

- name: create a symlink to the workspace directory
  delegate_to: "{{ instance_public_ip }}"
  become: true
  shell: |
    ln -s {{ work_dir }}/{{ workspace_dir }}/github /github

- name: download the github runner
  delegate_to: "{{ instance_public_ip }}"
  shell: |
    cd {{ work_dir }}/{{ github_runner_dir }}

    curl -o actions-runner-linux-arm64-{{ github_runner_version }}.tar.gz \
      -L https://github.com/actions/runner/releases/download/v{{ github_runner_version }}/actions-runner-linux-arm64-{{ github_runner_version }}.tar.gz

    tar xzf ./actions-runner-linux-arm64-{{ github_runner_version }}.tar.gz

- name: change file permissions
  delegate_to: "{{ instance_public_ip }}"
  become: true
  shell: |
    cd {{ work_dir }}/{{ github_runner_dir }}

    chmod -R "0755" *

- name: configure the github runner
  delegate_to: "{{ instance_public_ip }}"
  shell: |
    RESPONSE=$(curl -s -L \
      -X POST \
      -H "Accept: application/vnd.github+json" \
      -H "Authorization: Bearer {{ github_api_pat }}" \
      -H "X-GitHub-Api-Version: 2022-11-28" \
      https://api.github.com/orgs/{{ github_org }}/actions/runners/registration-token)

    TOKEN=$(echo "$RESPONSE" | jq -r '.token')

    {{ work_dir }}/{{ github_runner_dir }}/config.sh --unattended \
      --url https://github.com/{{ github_org }} \
      --token $TOKEN \
      --name "{{ instance_name }}" \
      --runnergroup "{{ github_runner_group }}" \
      --labels "{{ github_runner_labels }}" \
      --replace

- name: check if the github runner service exists
  delegate_to: "{{ instance_public_ip }}"
  become: true
  stat:
    path: "/etc/systemd/system/actions.runner.{{ github_org }}.{{ instance_name }}.service"
    # /etc/systemd/system/actions.runner.rhadp-examples.rhadp-xwktd-builder-1.service
  register: github_runner_service_stat

- name: register the github runner as a service
  when: github_runner_service_stat.stat.exists == false
  delegate_to: "{{ instance_public_ip }}"
  become: true
  shell: |
    cd {{ work_dir }}/{{ github_runner_dir }}

    # fix selinux issues
    # see https://github.com/actions/runner/issues/3186
    chcon system_u:object_r:usr_t:s0 ./svc.sh

    ./svc.sh install

- name: start the github runner
  delegate_to: "{{ instance_public_ip }}"
  become: true
  shell: |
    cd {{ work_dir }}/{{ github_runner_dir }}

    # fix selinux issues
    # see https://github.com/actions/runner/issues/3186
    chcon system_u:object_r:usr_t:s0 ./runsvc.sh

    ./svc.sh start