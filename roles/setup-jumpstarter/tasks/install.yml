# Implement your install deployment tasks here
# -------------------------------------------------

- name: create jumpstarter environment
  k8s:
    definition: "{{ lookup('template', item ) | from_yaml }}"
    state: present
    apply: yes
    kubeconfig: "{{ local_kubeconfig_file }}"
  loop:
    - jumpstarter-bootstrap-app.yml.j2

- name: wait for the jumpstarter-bootstrap application to be ready
  k8s_info:
    api_version: argoproj.io/v1alpha1
    kind: Application
    name: jumpstarter-bootstrap
    namespace: "{{ gitops_namespace }}"
    kubeconfig: "{{ local_kubeconfig_file }}"
  register: r_application
  retries: 180
  delay: 10
  until:
    - r_application.resources | length > 0
    - r_application.resources[0].status is defined
    - r_application.resources[0].status.sync is defined
    - r_application.resources[0].status.sync.status is defined
    - r_application.resources[0].status.sync.status == 'Synced'

- name: create jumpstarter application
  k8s:
    definition: "{{ lookup('template', item ) | from_yaml }}"
    state: present
    apply: yes
    kubeconfig: "{{ local_kubeconfig_file }}"
  loop:
    - jumpstarter-app.yml.j2

- name: wait for the jumpstarter application to be ready
  k8s_info:
    api_version: argoproj.io/v1alpha1
    kind: Application
    name: jumpstarter
    namespace: "{{ gitops_namespace }}"
    kubeconfig: "{{ local_kubeconfig_file }}"
  register: r_application
  retries: 180
  delay: 10
  until:
    - r_application.resources | length > 0
    - r_application.resources[0].status is defined
    - r_application.resources[0].status.sync is defined
    - r_application.resources[0].status.sync.status is defined
    - r_application.resources[0].status.sync.status == 'Synced'