# Implement your pre-install deployment tasks here
# -------------------------------------------------

- name: create key pair using key_material obtained using 'file' lookup plugin
  amazon.aws.ec2_key:
    name: "{{ ssh_public_key_name }}"
    key_material: "{{ lookup('file', '{{ ssh_public_key_path }}') }}"
    aws_access_key: "{{ aws_access_key_id }}"
    aws_secret_key: "{{ aws_secret_access_key }}"
    region: "{{ aws_default_region }}"
    state: present
  register: keypair

- name: create vpc
  amazon.aws.ec2_vpc_net:
    name: "{{ vnet_name }}"
    cidr_block: "{{ aws_vnet_cidr }}"
    tags:
      Name: "{{ vnet_name }}"
    aws_access_key: "{{ aws_access_key_id }}"
    aws_secret_key: "{{ aws_secret_access_key }}"
    region: "{{ aws_default_region }}"
  register: vpc

- name: create subnet
  amazon.aws.ec2_vpc_subnet:
    vpc_id: "{{ vpc.vpc.id }}"
    cidr: "{{ aws_subnet_cidr }}"
    tags:
      Name: "{{ subnet_name }}"
    aws_access_key: "{{ aws_access_key_id }}"
    aws_secret_key: "{{ aws_secret_access_key }}"
    region: "{{ aws_default_region }}"
  register: subnet

- name: create internet gateway
  amazon.aws.ec2_vpc_igw:
    vpc_id: "{{ vpc.vpc.id }}"
    state: present
    tags:
      Name: "{{ vnet_name }}-igw"
    aws_access_key: "{{ aws_access_key_id }}"
    aws_secret_key: "{{ aws_secret_access_key }}"
    region: "{{ aws_default_region }}"
  register: igw

- name: create route table
  amazon.aws.ec2_vpc_route_table:
    vpc_id: "{{ vpc.vpc.id }}"
    routes:
      - dest: "0.0.0.0/0"
        gateway_id: "{{ igw.gateway_id }}"
    subnets:
      - "{{ subnet.subnet.id }}"
    tags:
      Name: "{{ vnet_name }}-rt"
    aws_access_key: "{{ aws_access_key_id }}"
    aws_secret_key: "{{ aws_secret_access_key }}"
    region: "{{ aws_default_region }}"
  register: route_table

- name: create security group
  amazon.aws.ec2_security_group:
    name: "{{ nsg_name }}"
    description: "{{ security_group_description }}"
    vpc_id: "{{ vpc.vpc.id }}"
    rules:
      - proto: tcp
        from_port: 22
        to_port: 22
        cidr_ip: 0.0.0.0/0
        rule_desc: "Allow SSH access"
      - proto: tcp
        from_port: 80
        to_port: 80
        cidr_ip: 0.0.0.0/0
        rule_desc: "Allow HTTP access"
      - proto: tcp
        from_port: 443
        to_port: 443
        cidr_ip: 0.0.0.0/0
        rule_desc: "Allow HTTPS access"
    aws_access_key: "{{ aws_access_key_id }}"
    aws_secret_key: "{{ aws_secret_access_key }}"
    region: "{{ aws_default_region }}"
  register: security_group